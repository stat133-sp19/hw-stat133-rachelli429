result <- list(trials = trials,
prob = prob)
class(result) = "binvar"
return(result)
}
#' @export
print.binvar <- function(x, ...) {
cat('"Binomial Variable"\n\nParameters\n- number of trials: ', x$trials,
"\n- prob of success: ", x$prob)
}
#' @export
summary.binvar <- function(x, ...) {
trials <- x$trials
prob <- x$prob
result <- list(
trials = trials,
prob = prob,
mean = aux_mean(trials, prob),
variance = aux_variance(trials, prob),
mode = aux_mode(trials, prob),
skewness = aux_skewness(trials, prob),
kurtosis = aux_kurtosis(trials, prob)
)
class(result) = "summary.binvar"
return(result)
}
print.summary.binvar <- function(x, ...) {
cat('"Summary Binomial"\n\nParameters\n- number of trials: ', x$trials,
"\n- prob of success: ", x$prob,
"\n\nMeasures\n- mean: ", x$mean,
"\n- variance: ", x$variance,
"\n- mode: ", x$mode,
"\n- skewness: ", x$skewness,
"\n- kurtosis: ", x$kurtosis
)
}
#' @title bin_mean
#' @description computes mean of binomial distribution
#' @param trials number of trials (numeric)
#' @param prob probability of success on each trial (numeric)
#' @return mean of binomial distribution
#' @export
#' @examples
#' bin_mean(10, 0.3)
bin_mean <- function(trials, prob) {
check_trials(trials)
check_prob(prob)
aux_mean(trials, prob)
}
#' @title bin_variance
#' @description computes variance of binomial distribution
#' @param trials number of trials (numeric)
#' @param prob probability of success on each trial (numeric)
#' @return variance of binomial distribution
#' @export
#' @examples
#' bin_variance(10, 0.3)
bin_variance <- function(trials, prob) {
check_trials(trials)
check_prob(prob)
aux_variance(trials, prob)
}
#' @title bin_mode
#' @description computes mode of binomial distribution
#' @param trials number of trials (numeric)
#' @param prob probability of success on each trial (numeric)
#' @return mode of binomial distribution
#' @export
#' @examples
#' bin_mode(10, 0.3)
bin_mode <- function(trials, prob) {
check_trials(trials)
check_prob(prob)
aux_mode(trials, prob)
}
#' @title bin_skewness
#' @description computes skewness of binomial distribution
#' @param trials number of trials (numeric)
#' @param prob probability of success on each trial (numeric)
#' @return skewness of binomial distribution
#' @export
#' @examples
#' bin_skewness(10, 0.3)
bin_skewness <- function(trials, prob) {
check_trials(trials)
check_prob(prob)
aux_skewness(trials, prob)
}
#' @title bin_kurtosis
#' @description computes kurtosis of binomial distribution
#' @param trials number of trials (numeric)
#' @param prob probability of success on each trial (numeric)
#' @return kurtosis of binomial distribution
#' @export
#' @examples
#' bin_kurtosis(10, 0.3)
bin_kurtosis <- function(trials, prob) {
check_trials(trials)
check_prob(prob)
aux_kurtosis(trials, prob)
}
dis2 <- bin_cumulative(5, 0.5)
plot(dis2)
source("checker-functions.R")
source("auxiliary-functions.R")
#' @title bin_choose
#' @description calculates the number of combinations in which k successes can occur in n trials
#' @param n number of trials (numeric)
#' @param k number of successes (numeric vector)
#' @return number of combinations
#' @export
#' @examples
#' bin_choose(n = 5, k = 2)
#' bin_choose(5, 0)
#' bin_choose(5, 1:3)
bin_choose <- function(n, k) {
if (any(k > n)) {
stop('k cannot be greater than n')
} else {
factorial(n) / (factorial(k) * factorial(n - k))
}
}
#' @title bin_probability
#' @description computes the probability of getting k successes in n trials with probability of success prob
#' @param success number of successes (numeric vector)
#' @param trials number of trials (numeric)
#' @param prob probability of success on each trial (numeric)
#' @return computed probability
#' @export
#' @examples
#' bin_probability(success = 2, trials = 5, prob = 0.5)
#' bin_probability(0:2, 5, 0.5)
#' bin_probability(55, 100, 0.45)
bin_probability <- function(success, trials, prob) {
check_trials(trials)
check_prob(prob)
check_success(success, trials)
bin_choose(trials, success) * prob ^ success * (1 - prob) ^ (trials - success)
}
#' @title bin_distribution
#' @description returns a data frame with the probability distribution of class "bindis"
#' @param trials number of trials (numeric)
#' @param prob probability of success on each trial (numeric)
#' @return data frame with the probability distribution
#' @export
#' @examples
#' bin_distribution(trials = 5, prob = 0.5)
bin_distribution <- function(trials, prob) {
success <- 0:trials
probability <- bin_probability(0:trials, trials, prob)
df <- data.frame(success, probability)
class(df) = c("bindis", "data.frame")
return(df)
}
#' @export
plot.bindis <- function(x, ...) {
barplot(x$probability, main = "histogram of binomial distribution",
xlab = "successes", ylab = "probability",
names.arg = x$success)
}
#' @title bin_cumulative
#' @description returns a data frame with the probability distribution & cumulative probabilities, of class "bincum"
#' @param trials number of trials (numeric)
#' @param prob probability of success on each trial (numeric)
#' @return data frame with probability distribution & cumulative probabilities
#' @export
#' @examples
#' bin_cumulative(trials = 5, prob = 0.5)
bin_cumulative <- function(trials, prob) {
distrib <- bin_distribution(trials, prob)
probability <- distrib$probability
cumulative <- c(probability[1])
for (i in 2:length(probability)) {
cumulative[i] <- cumulative[i - 1] + probability[i]
}
result <- data.frame(distrib, cumulative)
class(result) = c("bincum", "data.frame")
return(result)
}
#' @export
plot.bincum <- function(x, ...) {
plot(x$cumulative, main = "plot of cumulative distribution",
xlab = "successes", ylab = "probability",
type = "o")
}
#' @title bin_variable
#' @description return list with number of trials (trials) & probability of success (prob), of class "binvar"
#' @param trials number of trials (numeric)
#' @param prob probability of success on each trial (numeric)
#' @return list with number of trials & probability of success
#' @export
#' @examples
#' bin_variable(trials = 10, prob = 0.3)
bin_variable <- function(trials, prob) {
check_trials(trials)
check_prob(prob)
result <- list(trials = trials,
prob = prob)
class(result) = "binvar"
return(result)
}
#' @export
print.binvar <- function(x, ...) {
cat('"Binomial Variable"\n\nParameters\n- number of trials: ', x$trials,
"\n- prob of success: ", x$prob)
}
#' @export
summary.binvar <- function(x, ...) {
trials <- x$trials
prob <- x$prob
result <- list(
trials = trials,
prob = prob,
mean = aux_mean(trials, prob),
variance = aux_variance(trials, prob),
mode = aux_mode(trials, prob),
skewness = aux_skewness(trials, prob),
kurtosis = aux_kurtosis(trials, prob)
)
class(result) = "summary.binvar"
return(result)
}
print.summary.binvar <- function(x, ...) {
cat('"Summary Binomial"\n\nParameters\n- number of trials: ', x$trials,
"\n- prob of success: ", x$prob,
"\n\nMeasures\n- mean: ", x$mean,
"\n- variance: ", x$variance,
"\n- mode: ", x$mode,
"\n- skewness: ", x$skewness,
"\n- kurtosis: ", x$kurtosis
)
}
#' @title bin_mean
#' @description computes mean of binomial distribution
#' @param trials number of trials (numeric)
#' @param prob probability of success on each trial (numeric)
#' @return mean of binomial distribution
#' @export
#' @examples
#' bin_mean(10, 0.3)
bin_mean <- function(trials, prob) {
check_trials(trials)
check_prob(prob)
aux_mean(trials, prob)
}
#' @title bin_variance
#' @description computes variance of binomial distribution
#' @param trials number of trials (numeric)
#' @param prob probability of success on each trial (numeric)
#' @return variance of binomial distribution
#' @export
#' @examples
#' bin_variance(10, 0.3)
bin_variance <- function(trials, prob) {
check_trials(trials)
check_prob(prob)
aux_variance(trials, prob)
}
#' @title bin_mode
#' @description computes mode of binomial distribution
#' @param trials number of trials (numeric)
#' @param prob probability of success on each trial (numeric)
#' @return mode of binomial distribution
#' @export
#' @examples
#' bin_mode(10, 0.3)
bin_mode <- function(trials, prob) {
check_trials(trials)
check_prob(prob)
aux_mode(trials, prob)
}
#' @title bin_skewness
#' @description computes skewness of binomial distribution
#' @param trials number of trials (numeric)
#' @param prob probability of success on each trial (numeric)
#' @return skewness of binomial distribution
#' @export
#' @examples
#' bin_skewness(10, 0.3)
bin_skewness <- function(trials, prob) {
check_trials(trials)
check_prob(prob)
aux_skewness(trials, prob)
}
#' @title bin_kurtosis
#' @description computes kurtosis of binomial distribution
#' @param trials number of trials (numeric)
#' @param prob probability of success on each trial (numeric)
#' @return kurtosis of binomial distribution
#' @export
#' @examples
#' bin_kurtosis(10, 0.3)
bin_kurtosis <- function(trials, prob) {
check_trials(trials)
check_prob(prob)
aux_kurtosis(trials, prob)
}
devtools::document()
devtools::check_man()
devtools::document()
setwd("~/Desktop/stat-133/binomial/R")
devtools::document()
devtools::test()
devtools::document()
devtools::document()
devtools::document()
devtools::check_man()
devtools::test()
devtools::test()
bin_cumulative(5, 0.5)
devtools::test()
aux_mode(10, 0.3)
typeof(aux_mode(10, 0.3))
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::build()
devtools::install()
library(binomial)
library(binomial)
bin_choose(5, 2)
bin_probability(2, 5, 0.5)
bin_choose(n = 5, k = 2)
bin_distribution(trials = 5, prob = 0.5)
plot(bin_distribution(5, 0.5))
bin_cumulative(trials = 5, prob = 0.5)
plot(bin_cumulative(trials = 5, prob = 0.5))
bin_variable(trials = 10, p = 0.3)
summary(bin_variable(trials = 10, p = 0.3))
summary(bin_variable(trials = 10, p = 0.3))
aux_mean(10, 0.3)
aux_mean(10, 0.3)
check_prob(10)
check_prob(1)
bin_mean(10, 0.3)
rm(list = ls())
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(binomial)
bin_choose(n = 5, k = 2)
bin_probability(success = 2, trials = 5, prob = 0.5)
bin_distribution(trials = 5, prob = 0.5)
plot(bin_distribution(5, 0.5))
bin_cumulative(trials = 5, prob = 0.5)
plot(bin_cumulative(trials = 5, prob = 0.5))
bin_variable(trials = 10, p = 0.3)
summary(bin_variable(trials = 10, p = 0.3))
check_prob(1)
bin_mean(10, 0.3)
bin_variance(10, 0.3)
bin_mode(10, 0.3)
bin_skewness(10, 0.3)
bin_kurtosis(10, 0.3)
summary(bin_variable(trials = 10, p = 0.3))
summary(bin_variable(trials = 10, p = 0.3))
devtools::build()
devtools::install()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(binomial)
bin_choose(n = 5, k = 2)
bin_probability(success = 2, trials = 5, prob = 0.5)
bin_distribution(trials = 5, prob = 0.5)
plot(bin_distribution(5, 0.5))
bin_cumulative(trials = 5, prob = 0.5)
plot(bin_cumulative(trials = 5, prob = 0.5))
bin_variable(trials = 10, p = 0.3)
summary(bin_variable(trials = 10, p = 0.3))
bin_mean(10, 0.3)
bin_variance(10, 0.3)
bin_mode(10, 0.3)
bin_skewness(10, 0.3)
bin_kurtosis(10, 0.3)
summary(bin_variable(trials = 10, p = 0.3))
devtools::document()
devtools::check_man()
devtools::test()
devtools::build()
devtools::install()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(binomial)
bin_choose(n = 5, k = 2)
bin_probability(success = 2, trials = 5, prob = 0.5)
bin_distribution(trials = 5, prob = 0.5)
plot(bin_distribution(5, 0.5))
bin_cumulative(trials = 5, prob = 0.5)
plot(bin_cumulative(trials = 5, prob = 0.5))
bin_variable(trials = 10, p = 0.3)
summary(bin_variable(trials = 10, p = 0.3))
bin_mean(10, 0.3)
bin_variance(10, 0.3)
bin_mode(10, 0.3)
bin_skewness(10, 0.3)
bin_kurtosis(10, 0.3)
rm(list = ls())
bin_distribution(trials = 5, prob = 0.5)
library(binomial)
plot(bin_distribution(5, 0.5))
plot(bin_cumulative(trials = 5, prob = 0.5))
getwd()
devtools::document()
devtools::test()
devtools::check_man()
devtools::build()
devtools::install()
rm(list = ls())
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(binomial)
bin_choose(n = 5, k = 2)
bin_probability(success = 2, trials = 5, prob = 0.5)
bin_distribution(trials = 5, prob = 0.5)
plot(bin_distribution(5, 0.5))
bin_cumulative(trials = 5, prob = 0.5)
plot(bin_cumulative(trials = 5, prob = 0.5))
bin_variable(trials = 10, p = 0.3)
summary(bin_variable(trials = 10, p = 0.3))
bin_mean(10, 0.3)
bin_variance(10, 0.3)
bin_mode(10, 0.3)
bin_skewness(10, 0.3)
bin_kurtosis(10, 0.3)
summary(bin_variable(trials = 10, p = 0.3))
bin_mean(10, 0.3)
bin_variance(10, 0.3)
bin_mode(10, 0.3)
bin_skewness(10, 0.3)
bin_kurtosis(10, 0.3)
bin_distribution(trials = 5, prob = 0.5)
knitr::opts_chunk$set(echo = TRUE)
library(binomial)
setwd("~/Desktop/stat-133/hw-stat133/binomial")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(binomial)
bin_choose(n = 5, k = 2)
bin_probability(success = 2, trials = 5, prob = 0.5)
bin_distribution(trials = 5, prob = 0.5)
plot(bin_distribution(5, 0.5))
bin_cumulative(trials = 5, prob = 0.5)
plot(bin_cumulative(trials = 5, prob = 0.5))
bin_variable(trials = 10, p = 0.3)
summary(bin_variable(trials = 10, p = 0.3))
bin_mean(10, 0.3)
bin_variance(10, 0.3)
bin_mode(10, 0.3)
bin_skewness(10, 0.3)
bin_kurtosis(10, 0.3)
getwd()
bin_distribution(trials = 5, prob = 0.5)
GETWD()
getwd()
devtools::document()
devtools::check_man()
devtools::test()
devtools::build_vignettes()
devtools::build()
devtools::install()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(binomial)
bin_choose(n = 5, k = 2)
bin_probability(success = 2, trials = 5, prob = 0.5)
bin_distribution(trials = 5, prob = 0.5)
plot(bin_distribution(5, 0.5))
bin_cumulative(trials = 5, prob = 0.5)
plot(bin_cumulative(trials = 5, prob = 0.5))
bin_variable(trials = 10, p = 0.3)
summary(bin_variable(trials = 10, p = 0.3))
bin_mean(10, 0.3)
bin_variance(10, 0.3)
bin_mode(10, 0.3)
bin_skewness(10, 0.3)
bin_kurtosis(10, 0.3)
rm(list = ls())
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(binomial)
bin_choose(n = 5, k = 2)
bin_probability(success = 2, trials = 5, prob = 0.5)
bin_distribution(trials = 5, prob = 0.5)
plot(bin_distribution(5, 0.5))
bin_cumulative(trials = 5, prob = 0.5)
plot(bin_cumulative(trials = 5, prob = 0.5))
bin_variable(trials = 10, p = 0.3)
summary(bin_variable(trials = 10, p = 0.3))
bin_mean(10, 0.3)
bin_variance(10, 0.3)
bin_mode(10, 0.3)
bin_skewness(10, 0.3)
bin_kurtosis(10, 0.3)
summary(bin_variable(trials = 10, p = 0.3))
bin_cumulative(trials = 5, prob = 0.5)
bin_distribution(trials = 5, prob = 0.5)
bin_probability(success = 2, trials = 5, prob = 0.5)
