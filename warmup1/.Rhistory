x <- 1:5
n <- length(x)
xmean <- sum(x) / n
sum((x - mean)^2) / (n - 1)
sum((x - xmean)^2) / (n - 1)
var(x)
# sample variance
x <- 1:5
n <- length(x)
xmean <- sum(x) / n
sum((x - xmean)^2) / (n - 1)
var(x)
# sample variance (ver 1)
sample_var <- function(x) {
n <- length(x)
xmean <- sum(x) / n
xvar <- sum((x - xmean)^2) / (n - 1)
return(xvar)
}
# population variance (ver 1)
sample_var <- function(x) {
n <- length(x)
xmean <- sum(x) / n
xvar <- sum((x - xmean)^2) / n
return(xvar)
}
sample_var(rep(2, 5))
sample_var(1:5)
population_var(1:5)
# sample variance
x <- 1:5
n <- length(x)
xmean <- sum(x) / n
sum((x - xmean)^2) / (n - 1)
var(x)
# sample variance (ver 1)
sample_var <- function(x) {
n <- length(x)
xmean <- sum(x) / n
xvar <- sum((x - xmean)^2) / (n - 1)
return(xvar)
}
# population variance (ver 1)
population_var <- function(x) {
n <- length(x)
xmean <- sum(x) / n
xvar <- sum((x - xmean)^2) / n
return(xvar)
}
population_var(1:5)
sample_var(1:5)
sample_var(rep(2, 5))
population_var(c(1, 2, 3, 4, NA))
sample_var(c(1, 2, 3, 4, NA))
sample_var(rnorm(100))
variance <- function(x, type) {
n <- length(x)
xmean <- sum(x) / n
if (type == "sample") {
# compute sample variance
xvar <- sum((x - xmean)^2) / (n - 1)
} else if (type == "population") {
# compute population variance
xvar <- sum((x - xmean)^2) / n
} else {
# stop terminates execution and raises an error message
stop('invalid type value; must be "sample" or "population"')
}
return(xvar)
}
function(1:5, "asdf")
variance(1:5, "asdf")
variance(1:5, "sample")
variance(1:5, "population")
variance(1:5)
variance <- function(x, type = "sample") {
n <- length(x)
xmean <- sum(x) / n
if (type == "sample") {
# compute sample variance
xvar <- sum((x - xmean) ^ 2) / (n - 1)
} else if (type == "population") {
# compute population variance
xvar <- sum((x - xmean) ^ 2) / n
} else {
# stop terminates execution and raises an error message
# error message should tell the user how to fix it
stop('invalid type value; must be "sample" or "population"')
}
return(xvar)
}
variance(1:5)
?match.arg
?switch
variance2 <- function(x, type = "sample") {
n <- length(x)
xmean <- sum(x) / n
type_match <- match.arg(type, c("sample", "population")) # matches the type argument to sample or population, allows you to abbreviate
switch(type_match,
sample = sum((x - xmean) ^ 2) / (n - 1),
population = sum((x - xmean) ^ 2) / n
)
return(xvar)
}
variance2(1:5)
variance2 <- function(x, type = "sample") {
n <- length(x)
xmean <- sum(x) / n
type_match <- match.arg(type, c("sample", "population")) # matches the type argument to sample or population, allows you to abbreviate
xvar <- switch(type_match,
sample = sum((x - xmean) ^ 2) / (n - 1),
population = sum((x - xmean) ^ 2) / n
)
}
variance2(1:5)
variance2(1:5, type = "xyz")
variance2 <- function(x, type = "sample") {
n <- length(x)
xmean <- sum(x) / n
type_match <- match.arg(type, c("sample", "population")) # matches the type argument to sample or population, allows you to abbreviate
xvar <- switch(type_match,
sample = sum((x - xmean) ^ 2) / (n - 1),
population = sum((x - xmean) ^ 2) / n
)
return(xvar)
}
variance2(1:5, "sam")
variance2(1:5, "pop")
